<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

	<title>XMPP4r: A real world example :  Ruby Fleebie</title>
	
<!--[if gte IE 7]><!-->
  <link rel="stylesheet" href="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/style.css" type="text/css" media="screen" charset="utf-8">
<!-- <![endif]-->

<!--[if IE 7]>
  <link rel="stylesheet" href="http://www.rubyfleebie.com/wp-content/themes/manifest_v1.1/style_ie.css" type="text/css" media="screen" charset="utf-8" />
<![endif]-->

<!--[if IE 6]>
<link rel="stylesheet" type="text/css" media="screen" href="http://www.rubyfleebie.com/wp-content/themes/manifest_v1.1/styles_ie6.css" />
<![endif]-->

  <link rel="alternate" type="application/rss+xml" title="Ruby Fleebie RSS Feed" href="http://www.rubyfleebie.com/feed/">
  <link rel="alternate" type="application/atom+xml" title="Ruby Fleebie Atom Feed" href="http://www.rubyfleebie.com/feed/atom/">
  <script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/jquery-1.js" charset="utf-8">
    
  </script>
  <link rel="pingback" href="http://www.rubyfleebie.com/xmlrpc.php">
    <link rel="alternate" type="application/rss+xml" title="Ruby Fleebie » XMPP4r: A real world example Comments Feed" href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/feed/">
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/jquery.js"></script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/utils.js"></script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/comment-reply.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.rubyfleebie.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.rubyfleebie.com/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="RESTful admin controllers and views with Rails" href="http://www.rubyfleebie.com/restful-admin-controllers-and-views-with-rails/">
<link rel="next" title="Ruby 1.9 made me remember how I hate the concept of encodings" href="http://www.rubyfleebie.com/ruby-1-9-made-me-remember-how-i-hate-the-concept-of-encodings/">
<meta name="generator" content="WordPress 3.3.1">
<link rel="canonical" href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/">
<link rel="shortlink" href="http://www.rubyfleebie.com/?p=102">

<!-- using Like-Button-Plugin-For-Wordpress [v4.4.4] | by Stefan Natter (http://www.gb-world.net) -->
<meta property="og:site_name" content="Ruby Fleebie">
<meta property="og:type" content="article">
<meta property="og:title" content="XMPP4r: A real world example">
<meta property="og:url" content="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/">
<meta property="og:description" content="Rediscovering the joy of programming">
<!-- using Like-Button-Plugin-For-Wordpress [v4.4.4] | by Stefan Natter (http://www.gb-world.net) -->
	<script language="JavaScript" type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/description_selection.js"></script><link rel="stylesheet" type="text/css" media="screen" href="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/sociable.css"><link href="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/shCore.css" type="text/css" rel="stylesheet"><link href="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/shThemeDefault.css" type="text/css" rel="stylesheet"><meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3">
</head>

<body class="single single-post postid-102 single-format-standard">


<div id="siteWrapper">

  <h1 class="vcard author"><a href="http://www.rubyfleebie.com/" title="Home" class="fn">Ruby Fleebie</a></h1> 

  <div id="mainNav">
    <ul>
      <li class="page_item page-item-30"><a href="http://www.rubyfleebie.com/about-me/">About me</a></li>
<li class="page_item page-item-14"><a href="http://www.rubyfleebie.com/about-ruby-fleebie/">About Ruby Fleebie</a></li>
<li class="page_item page-item-476"><a href="http://www.rubyfleebie.com/hire-my-services/">Hire my services</a></li>
    </ul>
  </div>

      
  <div id="siteDescription">
    Rediscovering the joy of programming  </div>

<div id="coreContent">

	

      <div class="post single hentry">
        <div class="postContent">
                    <script type="text/javascript"><!--
            google_ad_client = "ca-pub-2199512258476620";
            /* 468_width */
            google_ad_slot = "5754094929";
            google_ad_width = 468;
            google_ad_height = 60;
            //-->
            </script>
            <script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/show_ads.js">
            </script><ins style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="60" scrolling="no" width="468"></iframe></ins></ins>
        
          <h3 class="entry-title">XMPP4r: A real world example</h3>
          <h4 class="vcard author">by <span class="fn">Frank</span></h4>
          <div class="entry-content">
              <p>It’s been a while since I wrote about <a href="http://www.rubyfleebie.com/im-integration-with-xmpp4r/">XMPP</a> and <a href="http://www.rubyfleebie.com/im-integration-with-xmpp4r-part-2/">XMPP4r</a>.
 I’m glad because my introductory posts on this topic were very well 
received. Today I want to push further and share with you a 
tutorial-like post explaining step by step how to build a simple 
application with a XMPP interface. The complete listing is also 
available on <a href="http://bitbucket.org/flamontagne/fleebie_weather" onclick="javascript:pageTracker._trackPageview('/outbound/article/bitbucket.org');">bitbucket</a></p>
<h3>The application</h3>
<p>I couldn’t find something better than writing a xmpp weather bot. You
 type the name of a city and the bot answers with the current 
temperature and forecast information using the Google Weather API. 
Simple enough for this tutorial.</p>
<h3>The gems you’ll need to install</h3>
<ul>
<li><a href="http://home.gna.org/xmpp4r/" onclick="javascript:pageTracker._trackPageview('/outbound/article/home.gna.org');">XMPP4r</a> : <strong>sudo gem install xmpp4r</strong></li>
<li><a href="http://flori.github.com/json/" onclick="javascript:pageTracker._trackPageview('/outbound/article/flori.github.com');">json_pure</a>, to convert ruby hashes into json: <strong>sudo gem install json_pure</strong></li>
<li><a href="http://github.com/jnunemaker/crack" onclick="javascript:pageTracker._trackPageview('/outbound/article/github.com');">Crack</a>, a xml and json parser: <strong>sudo gem install crack</strong></li>
<li><a href="http://github.com/starling/starling" onclick="javascript:pageTracker._trackPageview('/outbound/article/github.com');">starling</a>, a ruby message queue: <strong>sudo gem sources -a http://gems.github.com/ &amp;&amp; sudo gem install starling-starling</strong> Then, start the starling daemon by typing : <strong>sudo starling -d</strong></li>
</ul>
<h3>Why using a message queue like starling?</h3>
<p>starling is a message queue library that speaks the memcache 
protocol. It is my opinion that a message queue is often a very clever 
and powerful way to establish a direct communication between the various
 parts of an application or even between different applications. For the
 sake of this tutorial, I wanted to separate our application into two 
distinct components and I didn’t want these components to talk to each 
other via the http protocol.</p>
<h3>We won’t install a XMPP server</h3>
<p>We won’t go to the pain of installing a XMPP server like <a href="http://www.ejabberd.im/" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.ejabberd.im');">ejabberd</a> or <a href="http://www.igniterealtime.org/projects/openfire/" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.igniterealtime.org');">openfire</a> because it would be beyond the scope of this article. Instead, we’ll simply use a Google account for our bot</p>
<h3>Application architecture</h3>
<p>Like I said, I wanted to separate the application into 2 components :
 The xmpp listener and the backend logic. You probably already guessed 
that the xmpp listener component job will be to send and receive xmpp 
stanzas to the user at the other end. To get the weather data, our 
listener will send the request to the backend component via a starling 
message queue that we’ll name <em>backend</em>. The backend component 
will do what is needed to compute the weather data and it will send the 
result back to the listener component via another starling message queue
 that we’ll name <em>listener</em></p>
<p>This setup might be overkill for our simple app but one of my 
objective was to show you how easy and interesting it can be to work 
with message queues. Let’s get the ball rolling.</p>
<h3>The listener component</h3>
<p>create a new file in your code editor and give it the name 
listener.rb. Here is the complete source code for this file. I will add 
comments at the bottom of the listing. To copy this code in your 
clipboard, don’t forget to click on the small “view plain” link at the 
top or else you will copy the line numbers as well.</p>
<div><div id="highlighter_776611" class="syntaxhighlighter  ruby"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div><div class="line number79 index78 alt2">79</div><div class="line number80 index79 alt1">80</div><div class="line number81 index80 alt2">81</div><div class="line number82 index81 alt1">82</div><div class="line number83 index82 alt2">83</div><div class="line number84 index83 alt1">84</div><div class="line number85 index84 alt2">85</div><div class="line number86 index85 alt1">86</div><div class="line number87 index86 alt2">87</div><div class="line number88 index87 alt1">88</div><div class="line number89 index88 alt2">89</div><div class="line number90 index89 alt1">90</div><div class="line number91 index90 alt2">91</div><div class="line number92 index91 alt1">92</div><div class="line number93 index92 alt2">93</div><div class="line number94 index93 alt1">94</div><div class="line number95 index94 alt2">95</div><div class="line number96 index95 alt1">96</div><div class="line number97 index96 alt2">97</div><div class="line number98 index97 alt1">98</div><div class="line number99 index98 alt2">99</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div><div class="line number106 index105 alt1">106</div><div class="line number107 index106 alt2">107</div><div class="line number108 index107 alt1">108</div><div class="line number109 index108 alt2">109</div><div class="line number110 index109 alt1">110</div><div class="line number111 index110 alt2">111</div><div class="line number112 index111 alt1">112</div><div class="line number113 index112 alt2">113</div><div class="line number114 index113 alt1">114</div><div class="line number115 index114 alt2">115</div><div class="line number116 index115 alt1">116</div><div class="line number117 index116 alt2">117</div><div class="line number118 index117 alt1">118</div><div class="line number119 index118 alt2">119</div><div class="line number120 index119 alt1">120</div><div class="line number121 index120 alt2">121</div><div class="line number122 index121 alt1">122</div><div class="line number123 index122 alt2">123</div><div class="line number124 index123 alt1">124</div><div class="line number125 index124 alt2">125</div><div class="line number126 index125 alt1">126</div><div class="line number127 index126 alt2">127</div><div class="line number128 index127 alt1">128</div><div class="line number129 index128 alt2">129</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="ruby plain">require </code><code class="ruby string">'starling'</code></div><div class="line number2 index1 alt1"><code class="ruby plain">require </code><code class="ruby string">'json/pure'</code></div><div class="line number3 index2 alt2"><code class="ruby plain">require </code><code class="ruby string">'xmpp4r'</code></div><div class="line number4 index3 alt1"><code class="ruby plain">require </code><code class="ruby string">'xmpp4r/roster'</code></div><div class="line number5 index4 alt2"><code class="ruby plain">require </code><code class="ruby string">'cgi'</code></div><div class="line number6 index5 alt1"><code class="ruby keyword">class</code> <code class="ruby plain">Fleebie</code></div><div class="line number7 index6 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby plain">include Jabber</code></div><div class="line number8 index7 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby plain">attr_accessor </code><code class="ruby color2">:jid</code><code class="ruby plain">, </code><code class="ruby color2">:password</code></div><div class="line number9 index8 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby plain">attr_reader </code><code class="ruby color2">:client</code><code class="ruby plain">, </code><code class="ruby color2">:roster</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">def</code> <code class="ruby plain">initialize</code></div><div class="line number12 index11 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">self</code><code class="ruby plain">.jid = </code><code class="ruby constants">ARGV</code><code class="ruby plain">[</code><code class="ruby constants">0</code><code class="ruby plain">]</code></div><div class="line number13 index12 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">self</code><code class="ruby plain">.password = </code><code class="ruby constants">ARGV</code><code class="ruby plain">[</code><code class="ruby constants">1</code><code class="ruby plain">]</code></div><div class="line number14 index13 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code> <code class="ruby plain">= Client.</code><code class="ruby keyword">new</code><code class="ruby plain">(</code><code class="ruby keyword">self</code><code class="ruby plain">.jid)</code></div><div class="line number15 index14 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">Jabber:</code><code class="ruby color2">:debug</code> <code class="ruby plain">= </code><code class="ruby keyword">true</code></div><div class="line number16 index15 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">connect</code></div><div class="line number17 index16 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">def</code> <code class="ruby plain">connect</code></div><div class="line number20 index19 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.connect</code></div><div class="line number21 index20 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.auth(</code><code class="ruby variable bold">@password</code><code class="ruby plain">)</code></div><div class="line number22 index21 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.send(Presence.</code><code class="ruby keyword">new</code><code class="ruby plain">.set_type(</code><code class="ruby color2">:available</code><code class="ruby plain">))</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#the "roster" is our bot contact list</code></div><div class="line number25 index24 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@roster</code> <code class="ruby plain">= Roster::Helper.</code><code class="ruby keyword">new</code><code class="ruby plain">(</code><code class="ruby variable bold">@client</code><code class="ruby plain">)</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#...to accept new subscriptions</code></div><div class="line number28 index27 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">start_subscription_callback</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#...to do something with the messages we receive</code></div><div class="line number31 index30 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">start_message_callback</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#When the backend application has done its job, it tells the listener</code></div><div class="line number34 index33 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#via the "listener" message queue.</code></div><div class="line number35 index34 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">process_queue</code></div><div class="line number36 index35 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby plain">private</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby comments">#Whatever we receive, we send it to our "backend" message queue. It's</code></div><div class="line number41 index40 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby comments">#not our job to parse and decode the actual message</code></div><div class="line number42 index41 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">def</code> <code class="ruby plain">start_message_callback</code></div><div class="line number43 index42 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.add_message_callback </code><code class="ruby keyword">do</code> <code class="ruby plain">|m|</code></div><div class="line number44 index43 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@starling</code><code class="ruby plain">.set(</code><code class="ruby string">'backend'</code><code class="ruby plain">,{</code><code class="ruby color2">:from</code> <code class="ruby plain">=&gt; m.from, </code><code class="ruby color2">:body</code> <code class="ruby plain">=&gt; m.body}.to_json)</code></div><div class="line number45 index44 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">unless</code> <code class="ruby plain">m.composing? || m.body.to_s.strip == </code><code class="ruby string">""</code></div><div class="line number46 index45 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number47 index46 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number48 index47 alt1">&nbsp;</div><div class="line number49 index48 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby comments">#whenever someone adds the bot to his contact list, it gets here</code></div><div class="line number50 index49 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">def</code> <code class="ruby plain">start_subscription_callback</code></div><div class="line number51 index50 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@roster</code><code class="ruby plain">.add_subscription_request_callback </code><code class="ruby keyword">do</code> <code class="ruby plain">|item,pres|</code></div><div class="line number52 index51 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#we accept everyone</code></div><div class="line number53 index52 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@roster</code><code class="ruby plain">.accept_subscription(pres.from)</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#Now it's our turn to send a subscription request</code></div><div class="line number56 index55 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">x = Presence.</code><code class="ruby keyword">new</code><code class="ruby plain">.set_type(</code><code class="ruby color2">:subscribe</code><code class="ruby plain">).set_to(pres.from)</code></div><div class="line number57 index56 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.send(x)</code></div><div class="line number58 index57 alt1">&nbsp;</div><div class="line number59 index58 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments">#let's greet our new user</code></div><div class="line number60 index59 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">m=Message:</code><code class="ruby color2">:new</code></div><div class="line number61 index60 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">m.to = pres.from</code></div><div class="line number62 index61 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">m.body = </code><code class="ruby string">"Welcome! Type a location to get the weather forecast"</code></div><div class="line number63 index62 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.send(m)</code></div><div class="line number64 index63 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number65 index64 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number66 index65 alt1">&nbsp;</div><div class="line number67 index66 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby comments">#The backend application talks to this XMPP interface via starling.</code></div><div class="line number68 index67 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby comments">#in process_queue we process our job list.</code></div><div class="line number69 index68 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">def</code> <code class="ruby plain">process_queue</code></div><div class="line number70 index69 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@starling</code> <code class="ruby plain">= Starling.</code><code class="ruby keyword">new</code><code class="ruby plain">(</code><code class="ruby string">'127.0.0.1:22122'</code><code class="ruby plain">)</code></div><div class="line number71 index70 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">th = </code><code class="ruby color1">Thread</code><code class="ruby plain">.</code><code class="ruby keyword">new</code> <code class="ruby keyword">do</code></div><div class="line number72 index71 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby color1">Thread</code><code class="ruby plain">.current.abort_on_exception = </code><code class="ruby keyword">true</code></div><div class="line number73 index72 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">loop </code><code class="ruby keyword">do</code></div><div class="line number74 index73 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">item = </code><code class="ruby variable bold">@starling</code><code class="ruby plain">.get(</code><code class="ruby string">'listener'</code><code class="ruby plain">)</code></div><div class="line number75 index74 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">unless</code> <code class="ruby plain">item.</code><code class="ruby keyword">nil</code><code class="ruby plain">?</code></div><div class="line number76 index75 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">jitem = </code><code class="ruby constants">JSON</code><code class="ruby plain">.parse(item) </code><code class="ruby keyword">rescue</code> <code class="ruby keyword">nil</code></div><div class="line number77 index76 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg = Message:</code><code class="ruby color2">:new</code><code class="ruby plain">(jitem[</code><code class="ruby string">"from"</code><code class="ruby plain">])</code></div><div class="line number78 index77 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.type=</code><code class="ruby color2">:chat</code></div><div class="line number79 index78 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">if</code> <code class="ruby plain">jitem[</code><code class="ruby string">"success"</code><code class="ruby plain">] == </code><code class="ruby keyword">true</code></div><div class="line number80 index79 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body = </code><code class="ruby string">"\n"</code></div><div class="line number81 index80 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"message"</code><code class="ruby plain">] + </code><code class="ruby string">"\n"</code></div><div class="line number82 index81 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += </code><code class="ruby string">"Current temp: #{jitem["</code><code class="ruby plain">details</code><code class="ruby string">"]["</code><code class="ruby plain">current_temperature</code><code class="ruby string">"]}\n"</code></div><div class="line number83 index82 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += </code><code class="ruby string">"Winds: #{jitem["</code><code class="ruby plain">details</code><code class="ruby string">"]["</code><code class="ruby plain">winds</code><code class="ruby string">"]}\n\n"</code></div><div class="line number84 index83 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += </code><code class="ruby string">"&lt;b&gt;TODAY&lt;/b&gt;\n"</code></div><div class="line number85 index84 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"today"</code><code class="ruby plain">][</code><code class="ruby string">"condition"</code><code class="ruby plain">] + </code><code class="ruby string">"\n"</code></div><div class="line number86 index85 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += </code><code class="ruby string">"Min/Max : #{jitem["</code><code class="ruby plain">details</code><code class="ruby string">"]["</code><code class="ruby plain">today</code><code class="ruby string">"]["</code><code class="ruby plain">low_f</code><code class="ruby string">"]} / "</code></div><div class="line number87 index86 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"today"</code><code class="ruby plain">][</code><code class="ruby string">"high_f"</code><code class="ruby plain">] + </code><code class="ruby string">" ("</code></div><div class="line number88 index87 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"today"</code><code class="ruby plain">][</code><code class="ruby string">"low_c"</code><code class="ruby plain">] + </code><code class="ruby string">" / "</code></div><div class="line number89 index88 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"today"</code><code class="ruby plain">][</code><code class="ruby string">"high_c"</code><code class="ruby plain">] + </code><code class="ruby string">") \n\n"</code></div><div class="line number90 index89 alt1">&nbsp;</div><div class="line number91 index90 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += </code><code class="ruby string">"&lt;b&gt;TOMORROW&lt;/b&gt;\n"</code></div><div class="line number92 index91 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"tomorrow"</code><code class="ruby plain">][</code><code class="ruby string">"condition"</code><code class="ruby plain">] + </code><code class="ruby string">"\n"</code></div><div class="line number93 index92 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += </code><code class="ruby string">"Min/Max : #{jitem["</code><code class="ruby plain">details</code><code class="ruby string">"]["</code><code class="ruby plain">tomorrow</code><code class="ruby string">"]["</code><code class="ruby plain">low_f</code><code class="ruby string">"]} /"</code></div><div class="line number94 index93 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"tomorrow"</code><code class="ruby plain">][</code><code class="ruby string">"high_f"</code><code class="ruby plain">] + </code><code class="ruby string">" ("</code></div><div class="line number95 index94 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"tomorrow"</code><code class="ruby plain">][</code><code class="ruby string">"low_c"</code><code class="ruby plain">] + </code><code class="ruby string">" / "</code></div><div class="line number96 index95 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body += jitem[</code><code class="ruby string">"details"</code><code class="ruby plain">][</code><code class="ruby string">"tomorrow"</code><code class="ruby plain">][</code><code class="ruby string">"high_c"</code><code class="ruby plain">] + </code><code class="ruby string">") \n"</code></div><div class="line number97 index96 alt2">&nbsp;</div><div class="line number98 index97 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.add_element(prepare_html(msg.body))</code></div><div class="line number99 index98 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body = msg.body.gsub(/&lt;.*?&gt;/, </code><code class="ruby string">''</code><code class="ruby plain">)</code></div><div class="line number100 index99 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">else</code></div><div class="line number101 index100 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">msg.body = jitem[</code><code class="ruby string">"message"</code><code class="ruby plain">]</code></div><div class="line number102 index101 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number103 index102 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby variable bold">@client</code><code class="ruby plain">.send(msg)</code></div><div class="line number104 index103 alt1">&nbsp;</div><div class="line number105 index104 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number106 index105 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number107 index106 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number108 index107 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number109 index108 alt2">&nbsp;</div><div class="line number110 index109 alt1"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">def</code> <code class="ruby plain">prepare_html(text)</code></div><div class="line number111 index110 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">h = </code><code class="ruby constants">REXML</code><code class="ruby plain">::Element:</code><code class="ruby color2">:new</code><code class="ruby plain">(</code><code class="ruby string">"html"</code><code class="ruby plain">)</code></div><div class="line number112 index111 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">h.add_namespace(</code><code class="ruby string">'<a href="http://jabber.org/protocol/xhtml-im">http://jabber.org/protocol/xhtml-im</a>'</code><code class="ruby plain">)</code></div><div class="line number113 index112 alt2">&nbsp;</div><div class="line number114 index113 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments"># The body part with the correct namespace</code></div><div class="line number115 index114 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">b = </code><code class="ruby constants">REXML</code><code class="ruby plain">::Element:</code><code class="ruby color2">:new</code><code class="ruby plain">(</code><code class="ruby string">"body"</code><code class="ruby plain">)</code></div><div class="line number116 index115 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">b.add_namespace(</code><code class="ruby string">'<a href="http://www.w3.org/1999/xhtml">http://www.w3.org/1999/xhtml</a>'</code><code class="ruby plain">)</code></div><div class="line number117 index116 alt2">&nbsp;</div><div class="line number118 index117 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments"># The html itself</code></div><div class="line number119 index118 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">t = </code><code class="ruby constants">REXML</code><code class="ruby plain">::Text.</code><code class="ruby keyword">new</code><code class="ruby plain">(text.gsub(</code><code class="ruby string">"\n"</code><code class="ruby plain">,</code><code class="ruby string">"&lt;br /&gt;"</code><code class="ruby plain">), </code><code class="ruby keyword">false</code><code class="ruby plain">, </code><code class="ruby keyword">nil</code><code class="ruby plain">, </code><code class="ruby keyword">true</code><code class="ruby plain">, </code><code class="ruby keyword">nil</code><code class="ruby plain">, %r/.^/ )</code></div><div class="line number120 index119 alt1">&nbsp;</div><div class="line number121 index120 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby comments"># Add the html text to the body, and the body to the html element</code></div><div class="line number122 index121 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">b.add(t)</code></div><div class="line number123 index122 alt2"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">h.add(b)</code></div><div class="line number124 index123 alt1"><code class="ruby spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="ruby plain">h</code></div><div class="line number125 index124 alt2"><code class="ruby spaces">&nbsp;&nbsp;</code><code class="ruby keyword">end</code></div><div class="line number126 index125 alt1"><code class="ruby keyword">end</code></div><div class="line number127 index126 alt2">&nbsp;</div><div class="line number128 index127 alt1"><code class="ruby plain">Fleebie.</code><code class="ruby keyword">new</code></div><div class="line number129 index128 alt2"><code class="ruby color1">Thread</code><code class="ruby plain">.stop</code></div></div></td></tr></tbody></table></div></div>
<h3>Important parts of this listing</h3>
<p>I hope that you will find the code above self explaining. However, 
here are a few important things about the listing. At line 98-99, we set
 2 versions of the same message that will be sent to the XMPP user : one
 in plain text, the other in XHTML. If the client at the other end has 
support for XHTML messages, the XHTML version will be displayed, 
otherwise the plain text version will be used. This is a <a href="http://xmpp.org/extensions/xep-0071.html" onclick="javascript:pageTracker._trackPageview('/outbound/article/xmpp.org');">pretty interesting feature of the XMPP protocol</a>.</p>
<h3>The process_queue method</h3>
<p>We start a new thread, we subscribe to the ‘listener’ message queue 
and we process our job list until the program ends or gets interrupted 
(by typing Ctrl-C for example). You can see that by using a message 
queue, we move away from the traditional “Request / Response” paradigm. 
In our case the request (line #44) is “disconnected” from the response 
(line #103). </p>
<p>Finally, at line #129 we stop the main thread (not the same thread 
that we started in process_queue). We do this for an obvious reason : we
 don’t want our script to terminate once it will reach the end of the 
file. We just ask him to wait until the other threads are done 
executing.</p>
<h3>The backend component</h3>
<p>It is here that we will fetch, compute and prepare the actual weather
 data. For the sake of this tutorial I use the google weather API but it
 could have been anything else. Create a new file in your code editor 
and call it backend.rb</p>
<pre name="code" class="ruby">require 'starling'
require 'crack'
require 'net/http'
require 'cgi'
require 'iconv'
require 'json'
class Backend
  def run
    process_queue
  end

  private
  def process_queue
    @starling = Starling.new('127.0.0.1:22122')
    th = Thread.new do
      Thread.current.abort_on_exception = true
      loop do
        item = @starling.get('backend')
        unless item.nil?
          jitem = Crack::JSON.parse(item) rescue nil

          google_api_url = "http://www.google.com/ig/api?weather=#{CGI::escape(jitem["body"])}"

          ig_weather = Crack::XML.parse(Iconv.conv('UTF-8',
          'ISO-8859-1',
          Net::HTTP.get(URI.parse(google_api_url))
          )
          ) rescue nil

          if jitem &amp;&amp; ig_weather
            process_job(jitem,ig_weather)
          else
            puts jitem["from"]
            @starling.set('listener',
            {
              :from =&gt; jitem["from"],
              :success =&gt; false,
              :message =&gt; "An error occured while accessing Google Weather API. You may try again later"
            }.to_json) unless jitem.nil?
          end

        end
      end
    end

  end

  def process_job(jitem,ig_weather)
    if ig_weather["xml_api_reply"]["weather"]["problem_cause"]
      @starling.set('listener',{
        :from =&gt; jitem["from"],
        :success =&gt; false,
        :message =&gt; "Data not available. Try being more precise when typing your location (ex. trois-rivières, québec)"
      }.to_json)
    else
      weather = ig_weather["xml_api_reply"]["weather"]
      data = {
        :forecast_obj =&gt; weather["forecast_conditions"],
        :city =&gt; weather["forecast_information"]["city"]["data"],
        :winds =&gt; weather["current_conditions"]["wind_condition"]["data"],
        :unit_system =&gt; weather["forecast_information"]["unit_system"]["data"],
        :temp_f =&gt; weather["current_conditions"]["temp_f"]["data"],
        :temp_c =&gt; weather["current_conditions"]["temp_c"]["data"],
      }      

      @starling.set('listener',
      {
        :from =&gt; jitem["from"],
        :success =&gt; true,
        :message =&gt; "Weather data for <b>#{data[:city]}:</b>",
        :details =&gt; {
          :current_temperature =&gt; "#{data[:temp_f]} ° F / #{data[:temp_c]} ° C",
          :unit =&gt; data[:unit_system],
          :winds =&gt; data[:winds],
          :today =&gt; temperatures(
                      data[:unit_system],
                      data[:forecast_obj][0]
                    ).merge(:condition =&gt; data[:forecast_obj][0]["condition"]["data"]),

          :tomorrow =&gt; temperatures(
                        data[:unit_system],
                        data[:forecast_obj][1]
                      ).merge(:condition =&gt; data[:forecast_obj][1]["condition"]["data"])
        }
      }.to_json)
    end
  end

  def temperatures(source_unit,obj)
    x = {}

    if(source_unit == "US")
      #we convert to Celcius
      x["low_c"] = obj["low"]["data"].to_i.to_celcius
      x["high_c"] = obj["high"]["data"].to_i.to_celcius
      x["low_f"] = "#{obj["low"]["data"]} ° F"
      x["high_f"] = "#{obj["high"]["data"]} ° F"

    else
      #we convert to farenheit
      x["low_f"] = obj["low"]["data"].to_i.to_farenheit
      x["high_f"] = obj["high"]["data"].to_i.to_farenheit
      x["low_c"] = "#{obj["low"]["data"]} ° C"
      x["high_c"] = "#{obj["high"]["data"]} ° C"
    end
    x
  end
end

class Fixnum
  def to_celcius
    ((self - 32) / 1.8).round.to_s + " °C"
  end

  def to_farenheit
    (self * 1.8 + 32).round.to_s + " °F"
  end
end

Backend.new.run

#Always remember to pause the main thread at the end since it does not contain any
#blocking call.
Thread.stop
</pre>
<p>This code is not very sexy… It just queries the google api, parse the
 result, convert temperatures from Farenheit to Celcius or the other way
 around (because the Google API doesn’t do that by itself) and send back
 the response to the listener component via the corresponding message 
queue.</p>
<h3>Launch the script</h3>
<p>Create a shell script and call it launcher.sh (don’t forget to chmod +x). put the following in it :</p>
<pre name="code">#!/bin/bash
export RUBYOPT=rubygems
d=`dirname $0`
ruby $d/backend.rb &amp;
ruby $d/listener.rb yourbot@gmail.com somepassword
</pre>
<p>Now you can type ./launcher.sh and you should be ready to go. If you 
encounter a problem while following the tutorial, don’t hesitate to post
 a comment and I’ll do my best to help you resolve it.</p>

<div class="sociable">
<span class="sociable_tagline">
<strong>Bookmark this post :</strong>
	<span>These icons link to social bookmarking sites where readers can share and discover new web pages.</span>
</span>
<ul>
	<li><a href="http://www.dzone.com/links/add.html?url=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F&amp;title=XMPP4r%3A+A+real+world+example" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.dzone.com');" title="DZone" onfocus="sociable_description_link(this, 'description')"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/dzone.png" title="DZone" alt="DZone" class="sociable-hovers"></a></li>
	<li><a href="http://reddit.com/submit?url=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F&amp;title=XMPP4r%3A+A+real+world+example" onclick="javascript:pageTracker._trackPageview('/outbound/article/reddit.com');" title="Reddit"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/reddit.png" title="Reddit" alt="Reddit" class="sociable-hovers"></a></li>
	<li><a href="http://del.icio.us/post?url=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F&amp;title=XMPP4r%3A+A+real+world+example" onclick="javascript:pageTracker._trackPageview('/outbound/article/del.icio.us');" title="del.icio.us"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/delicious.png" title="del.icio.us" alt="del.icio.us" class="sociable-hovers"></a></li>
	<li><a href="http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F&amp;title=XMPP4r%3A+A+real+world+example" onclick="javascript:pageTracker._trackPageview('/outbound/article/digg.com');" title="Digg" onfocus="sociable_description_link(this, 'bodytext')"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/digg.png" title="Digg" alt="Digg" class="sociable-hovers"></a></li>
	<li><a href="http://www.furl.net/storeIt.jsp?u=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F&amp;t=XMPP4r%3A+A+real+world+example" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.furl.net');" title="Furl"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/furl.png" title="Furl" alt="Furl" class="sociable-hovers"></a></li>
	<li><a href="http://technorati.com/faves?add=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/technorati.com');" title="Technorati"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/technorati.png" title="Technorati" alt="Technorati" class="sociable-hovers"></a></li>
	<li><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.rubyfleebie.com%2Fxmpp4r-a-real-world-example%2F&amp;title=XMPP4r%3A+A+real+world+example" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.stumbleupon.com');" title="StumbleUpon"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/stumbleupon.png" title="StumbleUpon" alt="StumbleUpon" class="sociable-hovers"></a></li>
</ul>
</div>
          </div>
        </div>
        <div class="postMeta">
          
          <div class="postDate"><span>Published:</span> <abbr class="published" title="2010-04-26T13:48:53+0000"><a href="http://www.rubyfleebie.com/2010/04/26/">April 26, 2010</a></abbr></div>
        	<div class="categories"><span>Filed Under:</span> <a href="http://www.rubyfleebie.com/category/in-depth/" title="View all posts in In depth" rel="category tag">In depth</a></div>
        	


        </div>
      </div>

      <div class="googleAd">
                  <a href="http://proglangmasterclass.com/?ref=27513808857"><img src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/proglangmasterclass.htm"></a>
              </div>
      
	<!-- You can start editing here. -->
<div id="comments">
    	<h3 id="comments">7 Responses to “XMPP4r: A real world example”</h3>

  	<div class="navigation">
  		<div class="alignleft"></div>
  		<div class="alignright"></div>
  	</div>

  	<ol class="commentlist">
  			<li class="comment even thread-even depth-1" id="comment-957">
				<div id="div-comment-957" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/86ea05a107d1babaa4804995cae4e2a6.jpg" class="avatar avatar-48 photo" height="48" width="48">		<cite class="fn"><a href="http://eribium.org/" onclick="javascript:pageTracker._trackPageview('/outbound/commentauthor/eribium.org');" rel="external nofollow" class="url">Alex MacCaw</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-957">
			April 26, 2010 at 3:51 pm</a>		</div>

		<p>Interesting article. In case you haven’t seen it, I want to point you to blather.<br>
<a href="http://sprsquish.github.com/blather/" onclick="javascript:pageTracker._trackPageview('/outbound/comment/sprsquish.github.com');" rel="nofollow">http://sprsquish.github.com/blather/</a></p>
<p>I’ve been working on the MUC part to it: <a href="http://github.com/maccman/blather" onclick="javascript:pageTracker._trackPageview('/outbound/comment/github.com');" rel="nofollow">http://github.com/maccman/blather</a></p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment byuser comment-author-frank bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-958">
				<div id="div-comment-958" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/88d3144fc72baa5b93157dfb45305695.jpg" class="avatar avatar-48 photo" height="48" width="48">		<cite class="fn"><a href="http://www.rubyfleebie.com/" rel="external nofollow" class="url">Frank</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-958">
			April 26, 2010 at 3:58 pm</a>		</div>

		<p>@Alex, yes I learned about blather only recently but didn’t have time to look at it yet. Is it comparable to xmpp4r?</p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="pingback even thread-even depth-1" id="comment-960">
				<div id="div-comment-960" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://zhesto.wordpress.com/2010/04/27/links-for-2010-04-26/" onclick="javascript:pageTracker._trackPageview('/outbound/commentauthor/zhesto.wordpress.com');" rel="external nofollow" class="url">links for 2010-04-26 « Bloggitation</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-960">
			April 27, 2010 at 2:08 am</a>		</div>

		<p>[...] XMPP4r: A real world example » Ruby Fleebie (tags: xmpp 
jabber ruby programming)       Categories: Links        Comments (0) 
Trackbacks (0) Leave a comment Trackback [...]</p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1030">
				<div id="div-comment-1030" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/66ec5cb977557a6b2b4b8a49114be0e6.jpg" class="avatar avatar-48 photo" height="48" width="48">		<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-1030">
			September 10, 2010 at 1:40 pm</a>		</div>

		<p>Blather doesn’t appear to support components. They’re a really nice
 way to write scalable bots as there is no roster/presence overhead.</p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1" id="comment-1678">
				<div id="div-comment-1678" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/19e0ad3d8fcf37693fe3820acbb50cd2.jpg" class="avatar avatar-48 photo" height="48" width="48">		<cite class="fn">Airton</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-1678">
			August 1, 2012 at 10:06 am</a>		</div>

		<p>How could I test that?</p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1679">
				<div id="div-comment-1679" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/af958c346b163352ab52de99ad5117cb.png" class="avatar avatar-48 photo" height="48" width="48">		<cite class="fn">Senthil</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-1679">
			August 3, 2012 at 3:33 am</a>		</div>

		<p>xmpp4r will work for mobile apps using Rhodes</p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1" id="comment-2075">
				<div id="div-comment-2075" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/2e069a9903ccae424cf3281aa3738a92.png" class="avatar avatar-48 photo" height="48" width="48">		<cite class="fn">Ray Renaldi</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/comment-page-1/#comment-2075">
			September 19, 2013 at 1:15 am</a>		</div>

		<p>Hi, i’m new to xmpp4r and trying to setup my own chat client, your 
post has been a great help and i would like to thank you for taking your
 time to post this. </p>
<p>However when i tried to run it, i encountered two errors that i can’t
 seem to fix, it’s my second months learning ruby so bear with me. </p>
<p>Here’s the errors:<br>
-`block in cache_get’: unexpected response “[\x00\x00\x00\n” (MemCache::MemCacheError) from backend.rb line 17/18<br>
-same error message from listener.rb line 80/79</p>
<p>Thank you in advance.</p>

		<div class="reply">
				</div>
				</div>
		</li>
  	</ol>

  	<div class="navigation">
  		<div class="alignleft"></div>
  		<div class="alignright"></div>
  	</div>
   

  

  
<div id="respond">  
  

<form action="http://www.rubyfleebie.com/wp-comments-post.php" method="post" id="commentform">

  <div class="leaveComment">
    
    <fieldset>
      <legend><span>Leave a Comment</span></legend>
      <div class="commentForm">
      
                        <div class="commentAuthorInfo">
            <label>Name: <em>Required</em> <input name="author" id="author" type="text"></label>
            <label>Email: <em>Required, not published</em> <input name="email" id="email" type="text"></label>
            <label>Homepage: <input name="url" id="url" type="text"></label>
          </div>
        <label>Comment:
        <textarea name="comment" id="comment" cols="50" rows="20"></textarea></label>
      
        <div id="cancel-comment-reply">
        	<small><a rel="nofollow" id="cancel-comment-reply-link" href="http://www.rubyfleebie.com/xmpp4r-a-real-world-example/#respond" style="display:none;">Cancel Reply</a></small>
        </div>
        <input value="Post Comment" type="submit"> <input name="comment_post_ID" value="102" type="hidden">
      </div>
    </fieldset>
  </div>
  <input name="comment_post_ID" value="102" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">

<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="f6fb5a10ab" type="hidden"></p>

	<p style="clear: both;" class="subscribe-to-comments">
        <input name="subscribe" id="subscribe" value="subscribe" style="width: auto;" type="checkbox">
        <label for="subscribe">Receive new comments by email</label>
	</p>



</form>
</div>


  </div>

  <div class="pageNav">
    <div class="prev"><a href="http://www.rubyfleebie.com/restful-admin-controllers-and-views-with-rails/" rel="prev">« Previous Post</a></div>
    <div class="next"><a href="http://www.rubyfleebie.com/ruby-1-9-made-me-remember-how-i-hate-the-concept-of-encodings/" rel="next">Next Post »</a></div>
  </div>


	
</div>


</div>

<div id="footer">

  <!-- Footer Links -->
  
  <h5>Elsewhere</h5>
  <ul class="elsewhere">
      </ul>

  <!-- Search Field -->
  
  <div class="footerContent">
    <form method="get" id="searchform" action="http://www.rubyfleebie.com/">
      <div id="search">
        <input name="s" id="s" type="text">
        <input id="searchsubmit" value="Search" type="submit">
      </div>
    </form>
    
    
    <p>© Ruby Fleebie. Powered by <a href="http://wordpress.org/">WordPress</a> and <a href="http://jimbarraud.com/manifest/">Manifest</a></p>
  </div>
</div>


<!-- Google Analytics for WordPress | http://yoast.com/wordpress/google-analytics/ -->
<script type="text/javascript">
	var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
	document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
	try {
		var pageTracker = _gat._getTracker("UA-1066327-4");
		// Cookied already: 
		pageTracker._trackPageview();
	} catch(err) {}
</script>
<!-- End of Google Analytics code -->
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/shCore.js"></script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/shBrushRuby.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.rubyfleebie.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.rubyfleebie.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['tab-size'] = 2;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.defaults['wrap-lines'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/hoverIntent.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var commonL10n = {"warnDelete":"You are about to permanently delete the selected items.\n  'Cancel' to stop, 'OK' to delete."};
/* ]]> */
</script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/common.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var wpAjax = {"noPerm":"You do not have permission to do that.","broken":"An unidentified error has occurred."};
/* ]]> */
</script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/wp-ajax-response.js"></script>
<script type="text/javascript" src="XMPP4r%20%20A%20real%20world%20example%20%20%20Ruby%20Fleebie_files/wp-lists.js"></script>



</body></html>